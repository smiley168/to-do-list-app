{"ast":null,"code":"import _classCallCheck from \"/Users/lindalei/learning/to-do-list-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lindalei/learning/to-do-list-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lindalei/learning/to-do-list-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lindalei/learning/to-do-list-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lindalei/learning/to-do-list-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lindalei/learning/to-do-list-app/app/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Query from \"./Query\";\nimport Mutation from \"./Mutation\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: \"100\",\n      todoText: \"\"\n    };\n\n    _this.handleCountChange = function (e) {\n      _this.setState({\n        count: e.target.value\n      });\n    };\n\n    _this.handleToDoTextChange = function (e) {\n      _this.setState({\n        todoText: e.target.value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.fetchData();\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Query, {\n        query: \"\\n          query($count: Int) {\\n            todoItems(first: $count) {\\n              id\\n              text\\n              completed\\n            }\\n          }\\n        \",\n        variables: {\n          count: parseInt(this.state.count)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, function (_ref) {\n        var refetch = _ref.refetch,\n            loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"app\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          className: \"count-form\",\n          onSubmit: function onSubmit(e) {\n            e.preventDefault();\n            refetch();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          value: _this2.state.count,\n          placeholder: \"Enter the number of items to return\",\n          onChange: _this2.handleCountChange,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          value: _this2.state.todoText,\n          placeholder: \"Enter new to-do item\",\n          onChange: _this2.handleToDoTextChange,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Mutation, {\n          mutation: \"\\n                  mutation(\\n                    $data: TodoItemCreateInput!\\n                  ) {\\n                    createTodoItem(data: $data) {\\n                      text\\n                      completed\\n                    }\\n                  }\\n                \",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }\n        }, function (_ref2) {\n          var mutate = _ref2.mutate,\n              data = _ref2.data;\n          return /*#__PURE__*/React.createElement(\"button\", {\n            onClick: function onClick() {\n              mutate({\n                data: {\n                  text: _this2.state.todoText,\n                  completed: false\n                }\n              });\n              setTimeout(function () {}, 10000);\n              refetch();\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }\n          }, \"Submit\");\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"item-list-container\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }\n        }, \"To-do items:\"), error && /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }\n        }, error.message), loading && /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 27\n          }\n        }, \"Loading...\"), data && /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"item-list\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        }, data.todoItems.map(function (todoItem) {\n          return /*#__PURE__*/React.createElement(Mutation, {\n            mutation: \"\\n                        mutation(\\n                          $where: TodoItemWhereUniqueInput!\\n                          $data: TodoItemUpdateInput!\\n                        ) {\\n                          updateTodoItem(where: $where, data: $data) {\\n                            id\\n                            text\\n                            completed\\n                          }\\n                        }\\n                      \",\n            key: todoItem.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }\n          }, function (_ref3) {\n            var mutate = _ref3.mutate,\n                data = _ref3.data;\n            var mutationResultExists = Boolean(data);\n            var completed = mutationResultExists ? data.updateTodoItem.completed : todoItem.completed;\n            return /*#__PURE__*/React.createElement(\"li\", {\n              className: completed ? \"item-complete\" : \"item-incomplete\",\n              onClick: function onClick() {\n                return mutate({\n                  where: {\n                    id: todoItem.id\n                  },\n                  data: {\n                    completed: !completed\n                  }\n                });\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 27\n              }\n            }, todoItem.text);\n          });\n        }))));\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/lindalei/learning/to-do-list-app/app/src/App.js"],"names":["React","Component","Query","Mutation","App","state","count","todoText","handleCountChange","e","setState","target","value","handleToDoTextChange","handleSubmit","preventDefault","fetchData","parseInt","refetch","loading","error","data","mutate","text","completed","setTimeout","message","todoItems","map","todoItem","id","mutationResultExists","Boolean","updateTodoItem","where"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Query from \"./Query\";\nimport Mutation from \"./Mutation\";\n\n\n\n\nclass App extends Component {\n  state = { count: \"100\", todoText: \"\" };\n\n  handleCountChange = e => {\n    this.setState({ count: e.target.value });\n  };\n\n  handleToDoTextChange = e => {\n    this.setState({ todoText: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.fetchData();\n  };\n\n  render() {\n    return (\n      <Query\n        query={`\n          query($count: Int) {\n            todoItems(first: $count) {\n              id\n              text\n              completed\n            }\n          }\n        `}\n        variables={{\n          count: parseInt(this.state.count)\n        }}\n      >\n        {({ refetch, loading, error, data }) => (\n          <div className=\"app\">\n            <form\n              className=\"count-form\"\n              onSubmit={e => {\n                e.preventDefault();\n                refetch();\n              }}\n            >\n              <input\n                type=\"number\"\n                value={this.state.count}\n                placeholder=\"Enter the number of items to return\"\n                onChange={this.handleCountChange}\n              />\n              <input \n                type=\"text\"  \n                value={this.state.todoText}\n                placeholder=\"Enter new to-do item\" \n                onChange={this.handleToDoTextChange}\n              />\n              <Mutation\n                mutation={`\n                  mutation(\n                    $data: TodoItemCreateInput!\n                  ) {\n                    createTodoItem(data: $data) {\n                      text\n                      completed\n                    }\n                  }\n                `}\n              >\n                \n                {({ mutate, data }) => {\n                  \n\n                  return (\n                    <button \n                      onClick={() => {\n                          mutate({\n                            data: { text: this.state.todoText, completed: false }\n                          });\n                          setTimeout(function(){}, 10000);\n                          refetch();\n                        }\n                      }\n                    >\n                      Submit\n                    </button>\n                    \n                  );\n                }}\n              </Mutation>\n            </form>\n            <div className=\"item-list-container\">\n              <h1>To-do items:</h1>\n              {error && <p>{error.message}</p>}\n              {loading && <p>Loading...</p>}\n              {data && (\n                <ul className=\"item-list\">\n                  {data.todoItems.map(todoItem => (\n                    <Mutation\n                      mutation={`\n                        mutation(\n                          $where: TodoItemWhereUniqueInput!\n                          $data: TodoItemUpdateInput!\n                        ) {\n                          updateTodoItem(where: $where, data: $data) {\n                            id\n                            text\n                            completed\n                          }\n                        }\n                      `}\n                      key={todoItem.id}\n                    >\n                      {({ mutate, data }) => {\n                        const mutationResultExists = Boolean(data);\n                        const completed = mutationResultExists\n                          ? data.updateTodoItem.completed\n                          : todoItem.completed;\n\n                        return (\n                          <li\n                            className={\n                              completed ? \"item-complete\" : \"item-incomplete\"\n                            }\n                            onClick={() =>\n                              mutate({\n                                where: { id: todoItem.id },\n                                data: { completed: !completed }\n                              })\n                            }\n                          >\n                            {todoItem.text}\n                          </li>\n                        );\n                      }}\n                    </Mutation>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n        )}\n      </Query>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}